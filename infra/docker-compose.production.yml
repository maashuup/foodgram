volumes:
  pg_data_production:
  static_volume:
  media_volume:

services:
  db:
    container_name: foodgram-db
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data_production:/var/lib/postgresql/data

  backend:
    container_name: foodgram-back
    image: mashuup/foodgram_backend:latest
    env_file: .env
    depends_on:
      - db
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media

  frontend:
    container_name: foodgram-front
    image: mashuup/foodgram_frontend:latest
    env_file: .env
    command: cp -r /app/result_build/. /usr/share/nginx/html/
    volumes:
      - static_volume:/usr/share/nginx/html

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "8080:80"
    env_file: .env
    volumes:
      # 
      # связывает локальный файл nginx.conf с файлом default.conf внутри 
      # контейнера. Таким образом, изменения, внесенные 
      # в nginx.conf на хосте, будут отражены в контейнере.
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      # - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      # связывает том static_volume с директорией /usr/share/nginx/html/ 
      # внутри контейнера. Это позволяет контейнеру Nginx обращаться к файлам 
      # статического контента, таким как HTML, CSS и JavaScript, на хосте.
      - static_volume:/usr/share/nginx/html
      # Этот том связывает локальную директорию ../docs/ с директорией
      # /Это позволяет контейнеру Nginx обслуживать файлы документации API, 
      # которые находятся в локальной директории ../docs/. Таким образом, когда 
      # вы обновляете документацию на хосте, изменения автоматически отражаются
      # в контейнере без необходимости пересоздания контейнера.
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media_volume:/app/media
